/* c_device_lkm.h
 *
 * Configuration Handling for Driver Framework Device API implementation.
 * A build-level configuration file is included and sanity-checked.
 * Do not edit this file. Edit cs_hwpal_lkm.h instead.
 */

/*****************************************************************************
* Copyright (c) 2010-2015 INSIDE Secure B.V. All Rights Reserved.
*
* This confidential and proprietary software may be used only as authorized
* by a licensing agreement from INSIDE Secure.
*
* The entire notice above must be reproduced on all authorized copies that
* may only be made to the extent permitted by a licensing agreement from
* INSIDE Secure.
*
* For more information or support, please go to our online support system at
* https://essoemsupport.insidesecure.com.
* In case you do not have an account for this system, please send an e-mail
* to ESSEmbeddedHW-Support@insidesecure.com.
*****************************************************************************/

/*----------------------------------------------------------------
 * get configuration settings from product config file
 */
#include "cs_hwpal_lkm.h"

// choose from LOG_SEVERITY_INFO, LOG_SEVERITY_WARN, LOG_SEVERITY_CRIT
#ifndef HWPAL_LOG_SEVERITY
#define HWPAL_LOG_SEVERITY LOG_SEVERITY_INFO
#endif

#ifndef HWPAL_MAX_DEVICE_NAME_LENGTH
#error "Expected HWPAL_MAX_DEVICE_NAME_LENGTH \
        defined by cs_hwpal_lkm.h"
#endif

#ifndef HWPAL_DEVICES
#error "Expected HWPAL_DEVICES defined by cs_hwpal_lkm.h"
#endif

// Device driver name used for looking up the device and reporting
#ifndef HWPAL_DRIVER_NAME
#define HWPAL_DRIVER_NAME "SafeXcel"
#endif

/*----------------------------------------------------------------
 * Other configuration parameters that can be set in a top level
 * configuration
 */

/* HWPAL_DEVICE_ID
 *
 * Device identification required for implementation of Device API
 */

/* HWPAL_VENDOR_ID
 *
 * Device vendor identification required for implementation of Device API
 */

/* HWPAL_DEVICE_RESOURCE_ID
 *
 * Device resource identification required for implementation of Device API
 */
#ifndef HWPAL_DEVICE_RESOURCE_ID
#define HWPAL_DEVICE_RESOURCE_ID        0
#endif

/* HWPAL_DEVICE_RESOURCE_BYTE_COUNT
 *
 * Device resource size (in bytes), if 0 then the resource maximum size will be
 * determined and used.
 *
 */
#ifndef HWPAL_DEVICE_RESOURCE_BYTE_COUNT
#define HWPAL_DEVICE_RESOURCE_BYTE_COUNT        0 // Use the entire resource
#endif

/* HWPAL_REMAP_ADDRESSES
 *
 * Macro that can be used to remap a device static resource offset
 * (a relative address) to another address
 *
 * Example:
 * #define HWPAL_REMAP_ADDRESSES     HWPAL_REMAP_ONE(0x71004, 0x71200);
 *
 */

/* HWPAL_DEVICE_MAGIC
 *
 * Optional magic number used to validate device administration data
 */

/* HWPAL_DEVICE_DIRECT_MEMIO
 *
 * Enable this parameter in order to use the direct memory I/O
 * operations bypassing the Linux kernel memory I/O API
 */

/* HWPAL_PLATFORM_DEVICE_NAME
 *
 * Platform-specific device name that can be used for looking up
 * device properties
 */

#ifndef HWPAL_PLATFORM_DEVICE_NAME
#define HWPAL_PLATFORM_DEVICE_NAME      HWPAL_DRIVER_NAME
#endif

/* HWPAL_PLATFORM_DEVICE_COMPATIBLE
 *
 * Platform-specific compatible device that can be used for device probing
 *
 */

#ifndef HWPAL_PLATFORM_DEVICE_COMPATIBLE
#define HWPAL_PLATFORM_DEVICE_COMPATIBLE        HWPAL_PLATFORM_DEVICE_NAME
#endif

/* HWPAL_PLATFORM_IRQ_IDX
 *
 * Platform-specific index of the IRQ that will be used.
 *
 */
#ifndef HWPAL_PLATFORM_IRQ_IDX
#define HWPAL_PLATFORM_IRQ_IDX 0
#endif


/* end of file c_device_lkm.h */
